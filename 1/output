#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include<sstream>
using namespace std;

int main()
{
    /* one vector has left side values
       one list has right side values
       sort both the list in ascending order
       map both the lists in a map
       find the difference between the
    */

    //std::vector<int> left = {3, 4 ,2 ,1,3 ,3 };
    //std::vector<int> right= { 4, 3, 5, 3, 9,3};

    std::vector<int> left;
    std::vector<int> right;

    std::ifstream f("C:\\Users\\juerg\\Desktop\\adventOfCode2024.txt"); //C:\Users\juerg

    if (!f.is_open()) {
        cerr << "Error opening the file!";
        return 1;
    }

    int leftval, rightval;
    std::string s;
    while (std::getline(f, s)) {
        std::stringstream ss(s);
        ss >> leftval >> rightval;
        left.push_back(leftval);
        right.push_back(rightval);
        }


    std::vector<int> resultDifferences;


    std::sort(left.begin(), left.end());
    std::sort(right.begin(), right.end());

    std::multimap<int, int> mymap;

    if (left.size() != right.size()) {
        std::cerr << "Error: Left and Right vectors must be the same size for one-to-one mapping!" << std::endl;
        return 1;
    }

    // Single loop for one-to-one mapping
    for (size_t i = 0; i < left.size(); ++i) {
        mymap.insert({left[i], right[i]}); // Pair left[i] with right[i]
    }

    for (const auto& pair : mymap) {
        int first = pair.first;
        int second = pair.second;
        int res = std::abs(first-second);
        resultDifferences.push_back(res);
    }

    int sum = 0;
    for(int diff : resultDifferences)
    {
        sum += diff;
    }

    std::cout<< sum << std::endl;
    std::cout.flush();
    //return 0;
}

